name: build-test
on: [push]
jobs:
  build:
    name: solution
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.100-preview.1.21103.13'
      - run: dotnet --version
      - name: build
        run: dotnet build
      - name: test
        run: dotnet test --collect:"XPlat Code Coverage"
      - name: install report-generator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool
      - name: generate report
        run: reportgenerator "-reports:./src/tests/**/TestResults/**/coverage.cobertura.xml" "-targetdir:artifacts/coveragereport" "-reporttypes:Html"\
      - name: Upload test coverage to codecov
        run: |
          if [ matrix.os == 'ubuntu-latest' ]; then
            bash <(curl -s https://codecov.io/bash)
          else
            echo "Won't run on $RUNNER_OS"
            exit
          fi
        shell: bash